// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage.proto

package grpc_storage

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Token struct {
	Idjwt                uint64   `protobuf:"varint,1,opt,name=Idjwt,proto3" json:"Idjwt,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetIdjwt() uint64 {
	if m != nil {
		return m.Idjwt
	}
	return 0
}

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type FilePath struct {
	Path                 string   `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilePath) Reset()         { *m = FilePath{} }
func (m *FilePath) String() string { return proto.CompactTextString(m) }
func (*FilePath) ProtoMessage()    {}
func (*FilePath) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{1}
}

func (m *FilePath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilePath.Unmarshal(m, b)
}
func (m *FilePath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilePath.Marshal(b, m, deterministic)
}
func (m *FilePath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilePath.Merge(m, src)
}
func (m *FilePath) XXX_Size() int {
	return xxx_messageInfo_FilePath.Size(m)
}
func (m *FilePath) XXX_DiscardUnknown() {
	xxx_messageInfo_FilePath.DiscardUnknown(m)
}

var xxx_messageInfo_FilePath proto.InternalMessageInfo

func (m *FilePath) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*Token)(nil), "grpc_storage.Token")
	proto.RegisterType((*FilePath)(nil), "grpc_storage.FilePath")
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor_0d2c4ccf1453ffdb) }

var fileDescriptor_0d2c4ccf1453ffdb = []byte{
	// 168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x2e, 0xc9, 0x2f,
	0x4a, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x49, 0x2f, 0x2a, 0x48, 0x8e,
	0x87, 0x8a, 0x29, 0x19, 0x73, 0xb1, 0x86, 0xe4, 0x67, 0xa7, 0xe6, 0x09, 0x89, 0x70, 0xb1, 0x7a,
	0xa6, 0x64, 0x95, 0x97, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x04, 0x41, 0x38, 0x20, 0x51, 0xb0,
	0xb4, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x84, 0xa3, 0x24, 0xc7, 0xc5, 0xe1, 0x96, 0x99,
	0x93, 0x1a, 0x90, 0x58, 0x92, 0x21, 0x24, 0xc4, 0xc5, 0x02, 0xa2, 0xc1, 0xda, 0x38, 0x83, 0xc0,
	0x6c, 0xa3, 0x16, 0x46, 0x2e, 0x6e, 0x90, 0x82, 0x60, 0x88, 0x25, 0x42, 0x56, 0x5c, 0x9c, 0xc1,
	0x89, 0x65, 0xa9, 0x10, 0x8b, 0x84, 0xf5, 0x90, 0x1d, 0xa0, 0x07, 0x16, 0x94, 0x12, 0x43, 0x15,
	0x84, 0x99, 0xae, 0xc4, 0x20, 0x64, 0xc9, 0xc5, 0xe1, 0x9e, 0x5a, 0x02, 0xd1, 0x8a, 0x43, 0x95,
	0x14, 0x36, 0x23, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x1e, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x86, 0x46, 0x68, 0xb6, 0x01, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileStorageClient is the client API for FileStorage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileStorageClient interface {
	SaveToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*FilePath, error)
	GetToken(ctx context.Context, in *FilePath, opts ...grpc.CallOption) (*Token, error)
}

type fileStorageClient struct {
	cc *grpc.ClientConn
}

func NewFileStorageClient(cc *grpc.ClientConn) FileStorageClient {
	return &fileStorageClient{cc}
}

func (c *fileStorageClient) SaveToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*FilePath, error) {
	out := new(FilePath)
	err := c.cc.Invoke(ctx, "/grpc_storage.FileStorage/SaveToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileStorageClient) GetToken(ctx context.Context, in *FilePath, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/grpc_storage.FileStorage/GetToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileStorageServer is the server API for FileStorage service.
type FileStorageServer interface {
	SaveToken(context.Context, *Token) (*FilePath, error)
	GetToken(context.Context, *FilePath) (*Token, error)
}

// UnimplementedFileStorageServer can be embedded to have forward compatible implementations.
type UnimplementedFileStorageServer struct {
}

func (*UnimplementedFileStorageServer) SaveToken(ctx context.Context, req *Token) (*FilePath, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveToken not implemented")
}
func (*UnimplementedFileStorageServer) GetToken(ctx context.Context, req *FilePath) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToken not implemented")
}

func RegisterFileStorageServer(s *grpc.Server, srv FileStorageServer) {
	s.RegisterService(&_FileStorage_serviceDesc, srv)
}

func _FileStorage_SaveToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileStorageServer).SaveToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_storage.FileStorage/SaveToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileStorageServer).SaveToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileStorage_GetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilePath)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileStorageServer).GetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_storage.FileStorage/GetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileStorageServer).GetToken(ctx, req.(*FilePath))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileStorage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_storage.FileStorage",
	HandlerType: (*FileStorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveToken",
			Handler:    _FileStorage_SaveToken_Handler,
		},
		{
			MethodName: "GetToken",
			Handler:    _FileStorage_GetToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storage.proto",
}
